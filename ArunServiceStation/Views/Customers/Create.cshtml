@model ArunServiceStation.Customer
@using ArunServiceStation.Models

@{
    ViewBag.Title = "Welcome to Register Service";
}

<h2> Welcome to Register Service</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Category", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Provider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Provider, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Provider, "", new { @class = "text-danger" })*@

                @Html.DropDownListFor(model => model.Provider, new SelectList(Enum.GetValues(typeof(Provider))), "Select Provider", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Provider, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Timeslot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">

                @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-5">

                @Html.DropDownListFor(model => model.Timeslot, new SelectList(ViewBag.Timeslots, "Value", "Text"), "Select TimeSlot", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Timeslot, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>


            $("#Timeslot").attr("disabled", true);
            var timeSlot = $('#Timeslot');

            //Attach the change event
            $("#AppointmentDate").change(function (evt) {
                //check if value is not equal to Select or not
                if ($(this).val() != "0") {
                    //Enable the textbox
                    $("#Timeslot").attr("disabled", false);
                    $("#Timeslot").val($(this).text());
                    
                    // This stops the Postback
                    evt.preventDefault();
                }
                $("#Timeslot").attr("disabled", false);

                $.getJSON('@Url.Action("Timeslot")', { AppointmentDate: $(this).val() }, function (slots) {
                    if (slots != null && !jQuery.isEmptyObject(slots))
                        {

                            $('#Timeslot option').remove();
                            timeSlot.append($('<option/>', {
                                value: null,
                                text: "Select TimeSlot"
                            }));

                        $.each(slots, function (index, slot) {
                                timeSlot.append($('<option/>', {
                                    value: slot.Value,
                                    text: slot.Text,
                                    disabled: slot.disabled
                                }));
                            });

                        };
                    });
            });

</script>

   
}
